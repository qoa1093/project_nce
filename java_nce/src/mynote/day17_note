day 17

[String 클래스]	 :	 ""로 된 문자열. 상수에서도 사용가능
1.	charAt(번지) 					: 문자열에서 번지에 해당하는 문자를 알려주는 메소드 
  								->charAt(0) : 문자열에서 0번지에 해당하는 문자를 알려주는 메소드 
2.	equals(문자열) 				: 두 문자열이 같은지 알려주는 메소드
	
3.	indexOf(문자열A) 				: 문자열에서 문자열 A가 어디에 있는지 번지를 알려주는 메소드. 없으면 -1

4.	length() 					: 문자열의 길이를 알려주는 메소드	/arr[] = length 괄호없다...

5.	replace(기존부분(A), 수정부분(B)) : 문자열에서 A부분을 B로 교체한 문자열을 알려주는 메소드(원본은 바뀌지 않음)

6.	substring(index) 			 : index번지부터 끝까지 부분 문자열을 생성
	substring(begin, end) 		 : begin번지부터 end번지 전까지 부분 문자열을 생성
	 							- 기존 문자열 수정하는 것이 아니라 새로운 부분 문자열을 생성
7.	toLowerCase() 				 : 문자열을 전부 소문자로
8.	toUpperCase() 				 : 문자열을 전부 대문자로
9.	trim() 						 : 앞뒤 공백을 제거하는 메소드
10.	valueOf(기본타입)				 : 기본타입값을 문자열로 변경해주는 메소드
11. split(패턴)					 : 패턴을 기준으로 부분 문자열들로 나눈 후 배열로 만듦
12. compareTo(문자열)				 : 두문자열이 같은지를 비교하여 같으면 0, 다르면 사전순에 따라 1 또는 -1을 반환
13. contains(문자열)				 : 해당 문자열이 포함되어있는지 아닌지 알려주는 메소드
<같다>
일반변수 : ==
참조변수 : equals() (오브젝트클래스의 메소드라서 주소비교할때 사용 가능)

<체이닝 기법> : 메소드를 연속해서 사용하는 것
Ex) scan.next().charAt(0); -> 리턴타입 문자열. 문자열 클래스에 있는 메소드(문자추출)사용
리턴타입이 클래스인경우에 많이 쓰임

498p

<래퍼(Wrapper)클래스>
 기본타입을 클래스로 만든것
 기본타입의 값 + null을 가질 수 있다.
 나중에 컬렉션 프레임워크나 제네릭 클래스에서 기본타입이 아닌 클래스가 꼭 필요한 경우가 있다. 이때 사용하기 위해서


501p

문자열을 기본타입으로 변환





GUI : Graphical User Interface
CLI : Command - Line Interface 

운영체제 : 컴퓨터의 자원을 관리하기 위한 시스템
 -윈도우
 -리눅스
 -맥os
 
[명령어 - 옵션]
ls : 현재 폴더에 있는 파일 및 폴더를 확인하는 명령어
ls-al : 현재 폴더에 있는 파일 및 폴더를 자세히 확인하는 명령어
		(숨김파일 포함)
mkdir 폴더명 : 새 폴더를 생성
cd 폴더명 : 해당 폴더로 이동
cd .. : 현재 폴더에서 상위 폴더로 이동
cd ~ : 최상위 폴더로 이동
cd /폴더명 : 절대경로에서 폴더명으로 이동 (c:다음에 생성?)
rmdir : 해당 폴더를 삭제
hostname -I : 아이피주소확인 192.168공유아이피

(cocalc.com)

cmd명령어 ipconfig -> 현재 아이피 주소 확인 (외부에서 접근가능하게 오캔처럼..)

