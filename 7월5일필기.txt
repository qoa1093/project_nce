컨트롤러 - 일치하는 url이 있는지 확인하여 있으면 해당 코드를 실행

src/main/webapp - 스프링의 기본이 되는 폴더
src/main/webapp/resources - ess/js/이미지 등을 관리하는 폴더
src/main/webapp/WEB-INF/spring 스프링 설정 파일이 있는 폴더
src/main/webapp/WEB-INF/views - 화면 파일(jsp)이 있는 폴더

설정파일은 스프링 폴더 폴더들 안에 잇음

pom.xml - 필요한 기능을 설치하기 위한 파일

스프링 - 자바로 된 웹 개발 프레임워크
MVC모델로 되어있어 개발이 용이하다

M : MODEL - DB에 있는 정보를 모델을 통해 주고받음 
V : VIEW - 화면
C : CONTROLLER 

gitignore.io  구글

 : 깃으로 파일을 관리할 때 신경안쓰고자 하는 파일을 깃 이그노어에 입력하면 파일내용이 바뀌어도 깃에 뜨지 않게 하는 파일

localhost:8800/spring/test/test => value값이 /test/test여야 실행됨 
localhost:8800/spring?name=홍길동 =>/
localhost:8800/spring/test/test?name=홍길동 =>/test/test

? : 정보를 전달하는 부분

@RequestMapping에 메소드가 지정되어있으면 해당 방식만 처리
생략되어 있으면 get post둘다 처리

화면을 보여주려면 기본이 get

-새로운 url을 추가하려면
1.controller에서 @RequestMapping 이 포함된 메소드를 추가한 후 value에 원하는 url경로로 수정
메소드의 return부분에 원하는 화면을 연결

2. views 폴더에 연결한 jsp를 추가



- 서버에서 화면으로 원하는 정보를 보내는 방법
1. 서버에서는 ModelAndView클래스에서 제공하는 addObject("화면에서 쓸이름",보낼데이터) 를 이용

2.화면에서는 ${화면에서 쓸 이름}으로 데이터를 받아서 처리


-화면에서 서버로 원하는 정보를 보내는 방법1(get) : a태그를 이용하는 방법
1. 화면에서는 a 태그를 이용하여 원하는 url지정후 ?다음에 정보를 전달한다
예 : localhost:8080/spring/signin?id=abc123&pw=abc123

-화면에서 서버로 원하는 정보를 보내는 방법2(post) : form태그를 이용하는 방법
2. 화면에서는 form태그에 input태그와 버튼을 이용하여 정보를 입력 후 전송버튼을 이용하여 정보를 전달


 3. 서버에서는 메소드의 매개변수로 해당 정보를 받아옴 

C:\Users\chaennn\Downloads


-화면에서 서버로 데이터를 보낼때 
1. 매개변수가 일반변수나 클래스인 경우(String, Integer, int 등)
  매개변수 명을 화면의 name과 맞춘다
2. 매개변수가 클래스의 객체인 경우는 매개변수의 멤버변수명과 화면의 name을 맞춘다


root-context에서
데이터베이스 계정 이름 안정해져있으면  value는 root


인터페이스 = 추상메소드 + 상수만 가능

추상메소드는 구현부가 없어서 기능들만 나열하기 때문에 기능을 눈으로 확인할 수 있음
서비스에 필요한 기능들을 추가하고 서비스 imp에서 해당 서비스의 기능들을 구현하는 작업을 함

그래서 서비스 인터페이스를 만들고 인터페이스를 이용해서 클래스를 만든다

@Autowired는 @inject와 비슷, 차이점음 @inject 내장 어노테이션이고 
@Autowired는 아니다.

@Autowired는 객체를 싱글톤으로 생성 해줌 

싱글톤 : 해당 프로그램 내에서 객체가 하나만 존재  / 해당 클래스로 만들어진 객체는 오로지 하나만 존재하게 하는 클래스

인터페이스로 객체를 생성할 수 없다
인터페이스는 구현 클래스를 이용하여 객체를 생성할 수 있다.

xml파일에서 #{}dhk ${}의 차이 : #{}은 '값'을 기준으로 ''을 붙여서 문자열 식(데이터로 인식)
${}는 값으로 변수(속성명)로 인식 


-xml 파일에서 쿼리문 작성 방법

<태그명 id="" resultType="">
쿼리
</태그명>

태그명 : select, insert, update, delete로 원하는 쿼리문에 맞게 태그명을 선정
id : dao의 메소드명과 일치
resultType : 태그명이 select일때만 사용함
 - 리턴타입을 의미


vo는 테이블같은것

프로젝트 알트 에프오 => 이전에 했던걸 덮어쓰기 때문에 중간에 수정한게 반영안될경우 밑에 세개 선택하고 오케이 누르면 해결됨 

sql아이디 비번 생성하고 디비 등록하기
grant all privileges on `디비명`.* to 계정명@localhost with grant option;
create user green2@localhost identified by 'cjgreen';


